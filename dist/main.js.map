{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/add-book/add-book.component.ts","./src/app/add-reader/add-reader.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/add-header.interceptor.ts","./src/app/core/badge.service.ts","./src/app/core/book-tracker-error-handler.service.ts","./src/app/core/books-resolver.service.ts","./src/app/core/cache.interceptor.ts","./src/app/core/data.service.ts","./src/app/core/http-cache.service.ts","./src/app/core/log-response.interceptor.ts","./src/app/core/readers-resolver.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/data.ts","./src/app/edit-book/edit-book.component.ts","./src/app/edit-reader/edit-reader.component.ts","./src/app/models/ReaderTrackerError.ts","./src/app/models/bookTrackerError.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.css","./src/app/add-book/add-book.component.html","./src/app/add-reader/add-reader.component.html","./src/app/app.component.html","./src/app/dashboard/dashboard.component.html","./src/app/edit-book/edit-book.component.html","./src/app/edit-reader/edit-reader.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { DataService } from \"app/core/data.service\";\nimport { Component, OnInit } from \"@angular/core\";\n\nimport { Book } from \"app/models/book\";\n\n@Component({\n  selector: \"app-add-book\",\n  templateUrl: \"./add-book.component.html\",\n  styles: [],\n})\nexport class AddBookComponent implements OnInit {\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {}\n\n  saveBook(formValues: any): void {\n    let newBook: Book = <Book>formValues;\n    newBook.bookID = 0;\n    console.log(newBook);\n    this.dataService\n      .addBook(newBook)\n      .subscribe((data: Book) => console.log(data)),\n      (err: any) => console.log(err);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"app/core/data.service\";\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: \"app-add-reader\",\n  templateUrl: \"./add-reader.component.html\",\n  styles: [],\n})\nexport class AddReaderComponent implements OnInit {\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {}\n\n  saveReader(formValues: any): void {\n    let newReader: Reader = <Reader>formValues;\n    newReader.readerID = 0;\n    console.log(newReader);\n    this.dataService\n      .addReader(newReader)\n      .subscribe((data: Reader) => console.log(data)),\n      (err: any) => console.log(err);\n  }\n}\n","import { ReadersResolverService } from \"./core/readers-resolver.service\";\nimport { BooksResolverService } from \"./core/books-resolver.service\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\n\nconst routes: Routes = [\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    resolve: {\n      resolvedBooks: BooksResolverService,\n      resolvedReaders: ReadersResolverService,\n    },\n  },\n  { path: \"addbook\", component: AddBookComponent },\n  { path: \"addreader\", component: AddReaderComponent },\n  { path: \"editreader/:id\", component: EditReaderComponent },\n  { path: \"editbook/:id\", component: EditBookComponent },\n  { path: \"\", redirectTo: \"dashboard\", pathMatch: \"full\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { CacheInterceptor } from \"./core/cache.interceptor\";\nimport { LogResponseInterceptor } from \"./core/log-response.interceptor\";\nimport { AddHeaderInterceptor } from \"./core/add-header.interceptor\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { ErrorHandler, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { AddBookComponent } from \"./add-book/add-book.component\";\nimport { AddReaderComponent } from \"./add-reader/add-reader.component\";\nimport { AppComponent } from \"./app.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { EditBookComponent } from \"./edit-book/edit-book.component\";\nimport { EditReaderComponent } from \"./edit-reader/edit-reader.component\";\nimport { BookTrackerErrorHandlerService } from \"./core/book-tracker-error-handler.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AddBookComponent,\n    EditReaderComponent,\n    EditBookComponent,\n    AddReaderComponent,\n  ],\n  providers: [\n    { provide: ErrorHandler, useClass: BookTrackerErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: AddHeaderInterceptor, multi: true },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AddHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CacheInterceptor,\n      multi: true,\n    },\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Observable } from \"rxjs\";\nimport {\n  HttpContextToken,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nexport const CONTENT_TYPE = new HttpContextToken(() => \"application/json\");\n@Injectable()\nexport class AddHeaderInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    console.log(`AddHeaderInterceptor - ${req.url}`);\n    let jsonReq: HttpRequest<any> = req.clone({\n      setHeaders: { \"Content-Type\": req.context.get(CONTENT_TYPE) },\n    });\n    return next.handle(jsonReq);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BadgeService {\n  constructor() {}\n\n  getReaderBadge(minutesRead: number): string {\n    if (minutesRead > 5000) {\n      return \"Manga Worm\";\n    } else if (minutesRead > 2500) {\n      return \"Page Turner\";\n    } else {\n      return \"Getting Started\";\n    }\n  }\n}\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { BookTrackerError } from 'app/models/bookTrackerError';\n\n@Injectable()\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\n\n  handleError(error: any): void {\n    let customError: BookTrackerError = new BookTrackerError();\n    customError.errorNumber = 200;\n    customError.message = (<Error>error).message;\n    customError.friendlyMessage = 'An error occurred. Please try again.';\n\n    console.log(customError);\n  }\n\n  constructor() { }\n\n}\n","import { catchError } from \"rxjs/operators\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\nimport { Book } from \"app/models/book\";\nimport { DataService } from \"./data.service\";\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BooksResolverService\n  implements Resolve<Book[] | BookTrackerError>\n{\n  constructor(private dataService: DataService) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<Book[] | BookTrackerError> {\n    return this.dataService.getAllBooks().pipe(catchError((err) => of(err)));\n  }\n}\n","import { tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { HttpCacheService } from \"./http-cache.service\";\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpContextToken,\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nexport const CACHEABLE = new HttpContextToken(() => true);\n\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n  constructor(private cacheService: HttpCacheService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    //only cache requests configured to be cacheable\n    if (!req.context.get(CACHEABLE)) {\n      return next.handle(req);\n    }\n    if (req.method !== \"GET\") {\n      //pass along non-cacheable requests and invalidate cache\n      console.log(`Invalidating cache: ${req.method} ${req.url}`);\n      return next.handle(req);\n    }\n\n    // attempt to retrieve a cached response\n    const cachedResponse: HttpResponse<any> = this.cacheService.get(req.url);\n\n    // return cached response\n    if (cachedResponse) {\n      console.log(`Returning a cached response: ${cachedResponse.url}`);\n      console.log(cachedResponse);\n      return of(cachedResponse);\n    }\n\n    // send request to server and add response to cache\n    return next.handle(req).pipe(\n      tap((event) => {\n        if (event instanceof HttpResponse) {\n          console.log(`Adding item to cache: ${req.url}`);\n          this.cacheService.put(req.url, event);\n        }\n      })\n    );\n  }\n}\n","import { CACHEABLE } from \"./cache.interceptor\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  HttpClient,\n  HttpContext,\n  HttpErrorResponse,\n  HttpHeaders,\n} from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { allBooks, allReaders } from \"app/data\";\nimport { Reader } from \"app/models/reader\";\nimport { Book } from \"app/models/book\";\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\nimport { OldBook } from \"app/models/oldBook\";\nimport { catchError, map, tap } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DataService {\n  constructor(private http: HttpClient) {}\n\n  mostPopularBook: Book = allBooks[0];\n\n  setMostPopularBook(popularBook: Book): void {\n    this.mostPopularBook = popularBook;\n  }\n\n  getAllReaders(): Observable<Reader[]> {\n    return this.http.get<Reader[]>(\"/api/readers\");\n  }\n\n  getReaderById(id: number): Observable<Reader> {\n    return this.http.get<Reader>(`/api/readers/${id}`, {\n      headers: new HttpHeaders({\n        Accept: \"application/json\",\n        Authorization: \"my-token\",\n      }),\n    });\n  }\n\n  getAllBooks(): Observable<Book[] | BookTrackerError> {\n    console.log(\"Getting all manga from the server.\");\n    return this.http\n      .get<Book[]>(\"/api/books\")\n      .pipe(catchError((err) => this.handleHttpError(err)));\n  }\n\n  private handleHttpError(\n    error: HttpErrorResponse\n  ): Observable<BookTrackerError> {\n    let dataError = new BookTrackerError();\n    dataError.errorNumber = 100;\n    dataError.message = error.statusText;\n    dataError.friendlyMessage = \"An error occurred retrieving data.\";\n    return throwError(dataError);\n  }\n\n  getBookById(id: number): Observable<Book> {\n    return this.http.get<Book>(`/api/books/${id}`, {\n      headers: new HttpHeaders({\n        Accept: \"application/json\",\n        Authorization: \"my-token\",\n      }),\n    });\n  }\n\n  getOldBookById(id: number): Observable<OldBook> {\n    return this.http.get<Book>(`/api/books/${id}`).pipe(\n      map(\n        (b) =>\n          <OldBook>{\n            bookTitle: b.title,\n            year: b.publicationYear,\n          }\n      ),\n      tap((classicBook) => console.log(classicBook))\n    );\n  }\n\n  addBook(newBook: Book): Observable<Book> {\n    return this.http.post<Book>(\"/api/books\", newBook, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n      }),\n    });\n  }\n\n  addReader(newReader: Reader): Observable<Reader> {\n    return this.http.post<Reader>(\"/api/readers\", newReader, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n      }),\n    });\n  }\n\n  updateBook(updatedBook: Book): Observable<void> {\n    return this.http.put<void>(\n      `/api/books/${updatedBook.bookID}`,\n      updatedBook,\n      {\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json\",\n        }),\n      }\n    );\n  }\n\n  updateReader(updatedReader: Reader): Observable<void> {\n    return this.http.put<void>(\n      `/api/readers/${updatedReader.readerID}`,\n      updatedReader,\n      {\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json\",\n        }),\n      }\n    );\n  }\n\n  deleteBook(bookID: number): Observable<void> {\n    return this.http.delete<void>(`/api/books/${bookID}`);\n  }\n\n  deleteReader(readerID: number): Observable<void> {\n    return this.http.delete<void>(`/api/readers/${readerID}`);\n  }\n}\n","import { HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpCacheService {\n  private requests: any = {};\n\n  constructor() {}\n\n  put(url: string, response: HttpResponse<any>): void {\n    this.requests[url] = response;\n  }\n\n  get(url: string): HttpResponse<any> | undefined {\n    return this.requests[url];\n  }\n\n  invalidateUrl(url: string): void {\n    this.requests[url] = undefined;\n  }\n\n  invalidateCache(): void {\n    this.requests = {};\n  }\n}\n","import { tap } from \"rxjs/operators\";\nimport {\n  HttpEvent,\n  HttpEventType,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    console.log(`LogResponseInterceptor - ${req.url}`);\n\n    return next.handle(req).pipe(\n      tap((event) => {\n        if (event.type === HttpEventType.Response) {\n          console.log(event.body);\n        }\n      })\n    );\n  }\n}\n","import { catchError } from \"rxjs/operators\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\nimport { DataService } from \"./data.service\";\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\nimport { Reader } from \"app/models/reader\";\nimport { ReaderTrackerError } from \"app/models/ReaderTrackerError\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ReadersResolverService\n  implements Resolve<Reader[] | ReaderTrackerError>\n{\n  constructor(private dataService: DataService) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<Reader[] | ReaderTrackerError> {\n    return this.dataService.getAllReaders().pipe(catchError((err) => of(err)));\n  }\n}\n","import { ActivatedRoute } from \"@angular/router\";\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Title } from \"@angular/platform-browser\";\n\nimport { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\nimport { DataService } from \"app/core/data.service\";\nimport { ReaderTrackerError } from \"app/models/ReaderTrackerError\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styles: [],\n})\nexport class DashboardComponent implements OnInit {\n  allBooks: Book[];\n  allReaders: Reader[];\n  mostPopularBook: Book;\n\n  constructor(\n    private dataService: DataService,\n    private title: Title,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    let resolvedBookData: Book[] | BookTrackerError =\n      this.route.snapshot.data[\"resolvedBooks\"];\n    if (resolvedBookData instanceof BookTrackerError) {\n      console.log(\n        `Dashboard component error: ${resolvedBookData.friendlyMessage}`\n      );\n    } else {\n      this.allBooks = resolvedBookData;\n    }\n    let resolvedReaderData: Reader[] | ReaderTrackerError =\n      this.route.snapshot.data[\"resolvedReaders\"];\n    if (resolvedReaderData instanceof ReaderTrackerError) {\n      console.log(\n        `Dashboard component error: ${resolvedReaderData.friendlyMessage}`\n      );\n    } else {\n      this.allReaders = resolvedReaderData;\n    }\n    this.mostPopularBook = this.dataService.mostPopularBook;\n\n    this.title.setTitle(`Manga Tracker`);\n  }\n\n  deleteBook(bookID: number): void {\n    this.dataService.deleteBook(bookID).subscribe(\n      (data: void) => {\n        let index: number = this.allBooks.findIndex(\n          (book) => book.bookID === bookID\n        );\n        this.allBooks.splice(index, 1);\n      },\n      (err: any) => console.log(err)\n    );\n  }\n\n  deleteReader(readerID: number): void {\n    this.dataService.deleteReader(readerID).subscribe(\n      (data: void) => {\n        let index: number = this.allReaders.findIndex(\n          (reader) => reader.readerID === readerID\n        );\n        this.allReaders.splice(index, 1);\n      },\n      (err: any) => console.log(err)\n    );\n  }\n}\n","import { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\n\nexport const allReaders: Reader[] = [\n  {\n    readerID: 1,\n    name: \"Andressa\",\n    weeklyReadingGoal: 350,\n    totalMinutesRead: 5600,\n  },\n  {\n    readerID: 2,\n    name: \"Matheus\",\n    weeklyReadingGoal: 210,\n    totalMinutesRead: 3000,\n  },\n  {\n    readerID: 3,\n    name: \"Juan\",\n    weeklyReadingGoal: 210,\n    totalMinutesRead: 3200,\n  },\n  {\n    readerID: 4,\n    name: \"Lud\",\n    weeklyReadingGoal: 140,\n    totalMinutesRead: 600,\n  },\n];\n\nexport const allBooks: Book[] = [\n  {\n    bookID: 1,\n    title: \"Goodnight Punpun\",\n    author: \"Inio Asano\",\n    publicationYear: 2007,\n  },\n  {\n    bookID: 2,\n    title: \"Tokyo Ghoul\",\n    author: \"Sui Ishida\",\n    publicationYear: 2011,\n  },\n  {\n    bookID: 3,\n    title: \"Berserk\",\n    author: \"Kentaro Miura\",\n    publicationYear: 1989,\n  },\n  {\n    bookID: 4,\n    title: \"Planetes\",\n    author: \"Makoto Yukimura\",\n    publicationYear: 1999,\n  },\n  {\n    bookID: 5,\n    title: \"Attack on Titan\",\n    author: \"Hajime Isayama\",\n    publicationYear: 2009,\n  },\n  {\n    bookID: 6,\n    title: \"Naruto\",\n    author: \"Masashi Kishimoto\",\n    publicationYear: 1999,\n  },\n  {\n    bookID: 7,\n    title: \"Chainsaw Man\",\n    author: \"Tatsuki Fujimoto\",\n    publicationYear: 2018,\n  },\n];\n","import { OldBook } from \"./../models/oldBook\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { Book } from \"app/models/book\";\nimport { DataService } from \"app/core/data.service\";\n\n@Component({\n  selector: \"app-edit-book\",\n  templateUrl: \"./edit-book.component.html\",\n  styles: [],\n})\nexport class EditBookComponent implements OnInit {\n  selectedBook: Book;\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {\n    let bookID: number = parseInt(this.route.snapshot.params[\"id\"]);\n    this.dataService.getBookById(bookID).subscribe(\n      (data: Book) => (this.selectedBook = data),\n      (err: any) => console.log(err)\n    );\n    this.dataService\n      .getOldBookById(bookID)\n      .subscribe((data: OldBook) =>\n        console.log(`Old book title: ${data.bookTitle}`)\n      );\n  }\n\n  setMostPopular(): void {\n    this.dataService.setMostPopularBook(this.selectedBook);\n  }\n\n  saveChanges(): void {\n    this.dataService.updateBook(this.selectedBook).subscribe(\n      (data: void) =>\n        console.log(`${this.selectedBook.title} updated successfully.`),\n      (err: any) => console.log(err)\n    );\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { Reader } from \"app/models/reader\";\nimport { DataService } from \"app/core/data.service\";\nimport { BadgeService } from \"app/core/badge.service\";\n\n@Component({\n  selector: \"app-edit-reader\",\n  templateUrl: \"./edit-reader.component.html\",\n  styles: [],\n  providers: [BadgeService],\n})\nexport class EditReaderComponent implements OnInit {\n  selectedReader: Reader;\n  currentBadge: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private badgeService: BadgeService\n  ) {}\n\n  ngOnInit() {\n    let readerID: number = parseInt(this.route.snapshot.params[\"id\"]);\n    this.dataService.getReaderById(readerID).subscribe(\n      (data: Reader) => (this.selectedReader = data),\n      (err: any) => console.log(err)\n    );\n    this.currentBadge = this.badgeService.getReaderBadge(\n      this.selectedReader.totalMinutesRead\n    );\n  }\n\n  saveChanges() {\n    this.dataService.updateReader(this.selectedReader).subscribe(\n      (data: void) =>\n        console.log(`${this.selectedReader.name} updated successfully.`),\n      (err: any) => console.log(err)\n    );\n  }\n}\n","export class ReaderTrackerError {\n  errorNumber: number;\n  message: string;\n  friendlyMessage: string;\n}\n","export class BookTrackerError {\n  errorNumber: number;\n  message: string;\n  friendlyMessage: string;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form\\n      #addBookForm=\\\"ngForm\\\"\\n      (ngSubmit)=\\\"saveBook(addBookForm.value)\\\"\\n      class=\\\"form-horizontal\\\"\\n    >\\n      <fieldset>\\n        <legend>Add New Manga</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputTitle\\\"\\n              placeholder=\\\"Title\\\"\\n              name=\\\"title\\\"\\n              ngModel\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputAuthor\\\"\\n              placeholder=\\\"Author\\\"\\n              name=\\\"author\\\"\\n              ngModel\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputYear\\\"\\n              placeholder=\\\"Year Published\\\"\\n              name=\\\"publicationYear\\\"\\n              ngModel\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form\\n      #addReaderForm=\\\"ngForm\\\"\\n      (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\"\\n      class=\\\"form-horizontal\\\"\\n    >\\n      <fieldset>\\n        <legend>Add Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputGoal\\\"\\n              placeholder=\\\"Name\\\"\\n              name=\\\"name\\\"\\n              ngModel\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\"\\n            >Weekly Goal</label\\n          >\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputGoal\\\"\\n              placeholder=\\\"Weekly Goal\\\"\\n              name=\\\"weeklyReadingGoal\\\"\\n              ngModel\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\"\\n            >Total Read</label\\n          >\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputTotal\\\"\\n              placeholder=\\\"Total Minutes Read\\\"\\n              name=\\\"totalMinutesRead\\\"\\n              ngModel\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"navbar-toggle collapsed\\\"\\n        data-toggle=\\\"collapse\\\"\\n        data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n      >\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Manga Tracker</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li>\\n          <a [routerLink]=\\\"['/addbook']\\\"\\n            >Add Manga<span class=\\\"sr-only\\\">(current)</span></a\\n          >\\n        </li>\\n        <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\n      </ul>\\n    </div>\\n    <!-- /.navbar-collapse -->\\n  </div>\\n  <!-- /.container-fluid -->\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\";","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Manga</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <li *ngFor=\\\"let manga of allBooks\\\">\\n            <i>{{ manga.title }}</i>\\n            <a [routerLink]=\\\"['/editbook', manga.bookID]\\\"> Edit </a>\\n            <a (click)=\\\"deleteBook(manga.bookID)\\\">Delete</a>\\n          </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <li *ngFor=\\\"let reader of allReaders\\\">\\n            {{ reader.name }}\\n            <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\n            <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\n          </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Most Popular Manga</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <i>{{ mostPopularBook.title }}</i> by {{ mostPopularBook.author }}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Manga</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputTitle\\\"\\n              placeholder=\\\"Title\\\"\\n              [(ngModel)]=\\\"selectedBook && selectedBook.title\\\"\\n              name=\\\"title\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputAuthor\\\"\\n              placeholder=\\\"Author\\\"\\n              [(ngModel)]=\\\"selectedBook && selectedBook.author\\\"\\n              name=\\\"author\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"inputYear\\\"\\n              placeholder=\\\"Year Published\\\"\\n              [(ngModel)]=\\\"selectedBook && selectedBook.publicationYear\\\"\\n              name=\\\"publicationYear\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary\\\"\\n              (click)=\\\"saveChanges()\\\"\\n            >\\n              Save\\n            </button>\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-success\\\"\\n              (click)=\\\"setMostPopular()\\\"\\n            >\\n              Set As Most Popular\\n            </button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader && selectedReader.name\\\" name=\\\"name\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader && selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader && selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\n          <div class=\\\"col-lg-8\\\">\\n            {{ currentBadge }}\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";"],"sourceRoot":"webpack:///"}